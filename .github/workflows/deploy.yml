name: Deploy ststas.dev/todolist

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          echo "$SSH_PRIVATE_KEY" > aws_rsa.pem
          chmod 600 aws_rsa.pem
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Debug private key
        run: |
          cat aws_rsa.pem | head -n 5
          ls -l aws_rsa.pem

      - name: Check SSH connection
        run: |
          ssh -i aws_rsa.pem -v -o StrictHostKeyChecking=no ubuntu@$AWS_LS_IP
        env:
          AWS_LS_IP: ${{ secrets.AWS_LS_IP }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Detect changed folders
        run: |
          git fetch origin main
          CHANGED=$(git diff --name-only origin/main...HEAD)
          echo "$CHANGED"

          FRONTEND_CHANGED=false
          BACKEND_CHANGED=false

          if echo "$CHANGED" | grep -q '^frontend/'; then
            FRONTEND_CHANGED=true
          fi

          if echo "$CHANGED" | grep -q '^backend/'; then
            BACKEND_CHANGED=true
          fi

          echo "$FRONTEND_CHANGED $BACKEND_CHANGED" > changed.txt

      - name: Warn if only .github/ changed
        run: |
          CHANGED=$(git diff --name-only origin/main...HEAD)

          if echo "$CHANGED" | grep -qvE '^frontend/|^backend/'; then
            if echo "$CHANGED" | grep -q '^.github/'; then
              echo "‚ÑπÔ∏è Only .github/ changed ‚Äì skipping service rebuild"
            fi
          fi

      - name: Deploy to server
        run: |
          ssh -i aws_rsa.pem -o StrictHostKeyChecking=no ubuntu@$AWS_LS_IP "mkdir -p /home/ubuntu/todolist && chmod 777 /home/ubuntu/todolist"

          rsync -avz --progress -e "ssh -i aws_rsa.pem -o StrictHostKeyChecking=no" ./ ubuntu@$AWS_LS_IP:/home/ubuntu/todolist

          ssh -i aws_rsa.pem -o StrictHostKeyChecking=no ubuntu@$AWS_LS_IP << 'EOF'
            if [ ! -f /swapfile ]; then
              sudo fallocate -l 1G /swapfile
              sudo chmod 600 /swapfile
              sudo mkswap /swapfile
              sudo swapon /swapfile
              echo "/swapfile none swap sw 0 0" | sudo tee -a /etc/fstab
            fi

            cd /home/ubuntu/todolist

            read FRONTEND_CHANGED BACKEND_CHANGED < changed.txt

            if [ "$FRONTEND_CHANGED" = "true" ]; then
              echo "üì¶ Changes in frontend ‚Äî building..."
              cd frontend
              npm ci
              npm run build
              cd ..
              docker-compose up -d --build todolist-frontend
            else
              echo "‚úÖ No frontend changes ‚Äî skipping build"
            fi

            if [ "$BACKEND_CHANGED" = "true" ]; then
              echo "üì¶ Changes in backend ‚Äî rebuilding..."
              docker-compose up -d --build todolist-backend
            else
              echo "‚úÖ No backend changes ‚Äî skipping rebuild"
            fi

            docker system prune -af
          EOF
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          AWS_LS_IP: ${{ secrets.AWS_LS_IP }}
